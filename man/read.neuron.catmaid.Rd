% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/catmaid_nat.R
\name{read.neuron.catmaid}
\alias{read.neuron.catmaid}
\alias{read.neurons.catmaid}
\title{Read neuron(s) from CATMAID server into NeuroAnatomy Toolbox (nat) format}
\usage{
read.neuron.catmaid(skid, pid = 1L, conn = NULL, ...)

read.neurons.catmaid(
  skids,
  pid = 1L,
  conn = NULL,
  OmitFailures = NA,
  df = NULL,
  fetch.annotations = FALSE,
  ...
)
}
\arguments{
\item{skid}{A numeric skeleton id}

\item{pid}{Project id (default 1)}

\item{conn}{A \code{catmaid_connection} objection returned by
\code{\link{catmaid_login}}. If \code{NULL} (the default) a new connection
object will be generated using the values of the \bold{catmaid.*} package
options as described in the help for \code{\link{catmaid_login}}.}

\item{...}{Additional arguments passed to the \code{\link{catmaid_fetch}}
function}

\item{skids}{One or more numeric skeleton ids or a character vector defining
a query (see \code{\link{catmaid_skids}} or examples for the syntax).}

\item{OmitFailures}{Whether to omit neurons for which \code{FUN} gives an
error. The default value (\code{NA}) will result in \code{\link{nlapply}}
stopping with an error message the moment there is an error. For other
values, see details.}

\item{df}{Optional data frame containing information about each neuron}

\item{fetch.annotations}{Whether or not to fetch the annotations for each
skeleton (default \code{FALSE})}
}
\value{
a \code{\link[nat]{neuron}} or \code{\link[nat]{neuronlist}} object
  containing one or more neurons. These neurons will have an additional class
  \code{catmaidneuron} which provides for some extra functionality in certain
  methods.
}
\description{
\code{read.neuron.catmaid} reads a single neuron, while
\code{read.neurons.catmaid} generates a \code{\link[nat]{neuronlist}} object
including some metadata information.
}
\details{
These functions provide a bridge between CATMAID and the
  neuronanatomy toolbox R package (\url{https://github.com/natverse/nat}),
  which provides extensive functionality for analysing and plotting neurons
  within the context of template brains.

  Note that the soma is set by inspecting CATMAID tags that
  (case-insensitively) match the regex \code{"(cell body|soma)"}. Where >1
  tag exists, the one that tags an endpoint is preferred. When a soma is
  identified via a CATMAID tag in this way, the \code{Label} column for the
  single node identified as the soma is set to \code{1}, the standard SWC
  code. Other nodes will have \code{Label=0} i.e. undefined.

When \code{OmitFailures} is not \code{NA}, \code{FUN} will be
  wrapped in a call to \code{\link{try}} to ensure that failure for any
  single neuron does not abort the \code{\link{nlapply}} call. When
  \code{OmitFailures=TRUE} the resultant \code{\link{neuronlist}} will be
  subsetted down to return values for which \code{FUN} evaluated
  successfully. When \code{OmitFailures=FALSE}, "try-error" objects will be
  left in place. In either of the last 2 cases error messages will not be
  printed because the call is wrapped as \code{try(expr, silent=TRUE)}.

  The optional dataframe (\code{df}) detailing each neuron should have
  \code{rownames} that match the names of each neuron. It would also make
  sense if the same key was present in a column of the data frame. If the
  dataframe contains more rows than neurons, the superfluous rows are dropped
  with a warning. If the dataframe is missing rows for some neurons an error
  is generated. If \code{SortOnUpdate=TRUE} then updating an existing
  \code{\link{neuronlist}} should result in a new \code{\link{neuronlist}}
  with ordering identical to reading all neurons from scratch.

  When \code{fetch.annotations=TRUE} then a second data.frame containing the
  annotations for each neurons as returned by
  \code{\link{catmaid_get_annotations_for_skeletons}} will be attached as the
  attribute \code{anndf} (see examples).
}
\examples{
\dontrun{
library(nat)
nl=read.neurons.catmaid(c(10418394,4453485))
plot3d(nl)

nl=read.neurons.catmaid(c(10418394,4453485), fetch.annotations=TRUE)
# look at those annotations
head(attr(nl, 'anndf'))

## Full worked example looking at Olfactory Receptor Neurons
# read in ORNs (using exact match to ORN annotation)
# note that use a progress bar drop any failures
orns=read.neurons.catmaid("ORN", OmitFailures = T, .progress='text')

# Add two extra columns to the attached data.frame
# for the Odorant receptor genes and the side of brain
orns[,'side']=factor(ifelse(grepl("left", orns[,'name']), "L", "R"))
orns[,'Or']= factor(sub(" ORN.*", "", orns[,'name']))

# check what we have
# see ?head.neuronlist and ?with.neuronlist for details of how this works
head(orns)
with(orns, ftable(side~Or))

# now some plots
open3d()
# colour by side of brain
plot3d(orns, col=side)
clear3d()
# colour by Odorant Receptor
# note similar position of axon terminals for same ORN class on left and right
plot3d(orns, col=Or)

## Additional example using Olfactory Projection Neurons
pns=read.neurons.catmaid("annotation:ORN PNs$", .progress='text')
pns[,'side']=factor(ifelse(grepl("left", pns[,'name']), "L", "R"))
pns[,'Or']= factor(sub(" PN.*", "", pns[,'name']))

# check that we have the same levels for the Odorant Receptor (Or) factor
# for ORNs and PNs
stopifnot(levels(pns[,'Or'])==levels(orns[,'Or']))

# Ok, let's plot the PNs - they will be in matching colours
plot3d(pns, col=Or)

}
}
\seealso{
\code{\link{plot3d.catmaidneuron}}, \code{\link[nat]{read.neuron}},
  \code{\link{connectors}} to extract connector information from a
  \code{catmaid.neuron}

\code{\link{catmaid_skids}}, \code{\link{catmaid_get_annotations_for_skeletons}}
}
