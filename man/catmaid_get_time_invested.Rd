% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/catmaid_stats.R
\name{catmaid_get_time_invested}
\alias{catmaid_get_time_invested}
\title{catmaid_get_time_invested}
\usage{
catmaid_get_time_invested(
  skids,
  pid = 1,
  conn = NULL,
  mode = c("SUM", "OVER_TIME", "ACTIONS"),
  minimum_actions = 10,
  max_inactive_time = 3,
  treenodes = TRUE,
  connectors = TRUE,
  start_date = "2005-01-01",
  end_date = "2099-01-01",
  ...
)
}
\arguments{
\item{skids}{could be skeleton id or neuron name or annotation}

\item{pid}{the project id}

\item{conn}{CATMAID connection instance}

\item{mode}{can be one of 'SUM','OVER_TIME','ACTIONS', where 'SUM' will return
the total time invested (in minutes), 'OVER_TIME' returns minutes invested per day over
time, 'ACTIONS' returns actions (node/connectors placed/edited) performed per day}

\item{minimum_actions}{the minimum number of actions per minute to be counted as active.}

\item{max_inactive_time}{Interval in minutes over which time invested is binned. Essentially determines how much time can be between bouts of activity.}

\item{treenodes}{Whether tree nodes need to be taken into account or not}

\item{connectors}{Whether connectors need to be taken into account or not}

\item{start_date}{The start date to compute activity from}

\item{end_date}{The end date to compute end of activity at}

\item{...}{Additional arguments passed to the \code{\link{catmaid_fetch}} 
function}
}
\description{
Calculates the time individual users have spent working on a set of neurons
This API is a replica of the get_time_invested from python package `pymaid`.
The parameters `minimum_actions` and `max_inactive_time`  are used to fine tune how time
invested is calculated. By default, time is binned over 3 minutes in which a given user 
has to perform 3x10 actions for that interval to be counted as active.
The parameter `mode` can be one of 'SUM' or 'OVER_TIME' or 'ACTIONS'.
'SUM' will return total time invested (in minutes) per user.
'OVER_TIME' will return minutes invested/day over time.
'ACTIONS' will return actions (node/connectors placed/edited) per day, for this choice 
the minimum_actions and max_inactive_time don't apply and hence every action is counted
}
\examples{
\dontrun{
tempval <- catmaid_skids('annotation:^ORN$')
skid_1 <-tempval[[1]]
catmaid_get_time_invested(skids=skid_1, mode='SUM')
}
}
