% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/catmaid_skeleton.R
\name{catmaid_get_connector_table}
\alias{catmaid_get_connector_table}
\title{Return connector table for a given neuron}
\usage{
catmaid_get_connector_table(
  skids,
  direction = c("both", "incoming", "outgoing"),
  partner.skids = TRUE,
  get_partner_names = FALSE,
  get_partner_nodes = FALSE,
  pid = 1,
  conn = NULL,
  raw = FALSE,
  ...
)
}
\arguments{
\item{skids}{Numeric skeleton ids}

\item{direction}{whether to find incoming or outgoing connections}

\item{partner.skids}{Whether to include information about the skid of each
partner neuron (NB there may be multiple partners per connector)}

\item{get_partner_names, get_partner_nodes}{Whether to fetch the names and/or
number of nodes for the partner neurons.}

\item{pid}{Project id (default 1)}

\item{conn}{A \code{catmaid_connection} objection returned by
\code{\link{catmaid_login}}. If \code{NULL} (the default) a new connection
object will be generated using the values of the \bold{catmaid.*} package
options as described in the help for \code{\link{catmaid_login}}.}

\item{raw}{Whether to return completely unprocessed data (when \code{TRUE}) 
or to convert the nodes and connectors lists into processed data.frames 
(when \code{FALSE}, the default)}

\item{...}{Additional arguments passed to the \code{\link{catmaid_fetch}}
function}
}
\value{
As of CATMAID v2016.10.18 this returns a data.frame with columns
  \itemize{

  \item skid

  \item connector_id

  \item x

  \item y

  \item z

  \item confidence

  \item user_id

  \item treenode_id (NB this is always the treenode id of the query skeleton
  whether or not incoming or outgoing connections are requested)

  \item last_modified

  \item partner_skid

  }

  Prior to this it returned a data.frame with columns \itemize{

  \item connector_id

  \item partner_skid

  \item x

  \item y

  \item z

  \item s

  \item confidence

  \item tags

  \item nodes_in_partner

  \item username

  \item treenode_id

  \item last_modified

  }
}
\description{
Return connector table for a given neuron
}
\examples{
\dontrun{
# fetch connector table for neuron 10418394
ct=catmaid_get_connector_table(10418394)
# compare number of incoming and outgoing synapses
table(ct$direction)

## Look at synapse location in 3d
# plot the neuron skeleton in grey for context
library(nat)
nopen3d()
plot3d(read.neurons.catmaid(10418394), col='grey')
# note use of nat::xyzmatrix to get xyz positions from the ct data.frame
# colour synapses by direction
points3d(xyzmatrix(ct), col=as.integer(ct$direction))

## plot connected neurons in context of brain
nopen3d()
# fetch and plot brain model
models=catmaid_fetch("1/stack/5/models")
vs=matrix(as.numeric(models$cns$vertices), ncol=3, byrow = TRUE)
points3d(vs, col='grey', size=1.5)

# fetch and plot neurons
plot3d(read.neurons.catmaid(10418394), col='black', lwd=3)
points3d(xyzmatrix(ct), col=as.integer(ct$direction))

partner_neuron_ids=unique(na.omit(as.integer(ct$partner_skid)))
partner_neurons=read.neurons.catmaid(partner_neuron_ids, .progress='text', OmitFailures = TRUE)
plot3d(partner_neurons)
}
}
\seealso{
Other connectors: 
\code{\link{catmaid_adjacency_matrix}()},
\code{\link{catmaid_get_connectors_between}()},
\code{\link{catmaid_get_connectors}()},
\code{\link{catmaid_query_connected}()},
\code{\link{connectors}()}
}
\concept{connectors}
